@model X.PagedList.IPagedList<BillboardApp.ViewModels.FaceAvailabilityViewModel>
@using X.PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

    @{
        ViewBag.Title = "Face Availability";
    }

    <h2>Face Availability</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
@using (Html.BeginForm("Index", "FaceAvailabilities", FormMethod.Get))
{     <p>
        Find by Type @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Availability Type", "Index",
                    new { sortOrder = ViewBag.AvailabilityTypeSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.AvailabilityType)*@
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AvailabilityType)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.FaceAvailabilityID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.FaceAvailabilityID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.FaceAvailabilityID })
                </td>
            </tr>
        }

    </table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter =
            ViewBag.CurrentFilter
    }))