@model X.PagedList.IPagedList<BillboardApp.ViewModels.SiteRunUpViewModel>
@using X.PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Site RunUp";
}

<h2>Site RunUp</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "SiteRunUps", FormMethod.Get))
{     <p>
        Find by Distance/Score @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Distance", "Index",
                new { sortOrder = ViewBag.DistanceSortParm, currentFilter = ViewBag.CurrentFilter })

            @*@Html.DisplayNameFor(model => model.Type)*@
        </th>
        <th>
            @Html.ActionLink("Score", "Index",
                new { sortOrder = ViewBag.ScoreSortParm, currentFilter = ViewBag.CurrentFilter })

            @*@Html.DisplayNameFor(model => model.Score)*@
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DistanceOption)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Score)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.SiteRunUpID }) |
                @Html.ActionLink("Details", "Details", new { id = item.SiteRunUpID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.SiteRunUpID })
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of
@Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter =
            ViewBag.CurrentFilter
    }))